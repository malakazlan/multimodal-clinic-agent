[tool:pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=.
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --junit-xml=test-results.xml

# Coverage configuration
[coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests
    api: API endpoint tests
    rag: RAG pipeline tests
    voice: Voice processing tests
    safety: Healthcare safety tests
    memory: Conversation memory tests
    llm: LLM integration tests
    stt: Speech-to-text tests
    tts: Text-to-speech tests

# Test environment variables
env =
    ENVIRONMENT=test
    LOG_LEVEL=ERROR
    OPENAI_API_KEY=test_key
    ELEVENLABS_API_KEY=test_key
    ASSEMBLYAI_API_KEY=test_key
    PINECONE_API_KEY=test_key
    PINECONE_ENVIRONMENT=test
    PINECONE_INDEX_NAME=test-index

# Minimum version requirements
minversion = 6.0

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
